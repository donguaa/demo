"""
Django settings for MyDjango project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent  # 项目路径


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')mm8s71l7a!budx)5^j+61%css416=sg_!flz^tmh-pu)9c(39'  # 密钥配置

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # 调试模式
# DEBUG 为 True 且 ALLOWED_HOSTS 为空时，项目只允许 localhost 或 127.0.0.1 访问
# DEBUG 为 空 时，ALLOWED_HOSTS 为必填项，否则项目无法启动
ALLOWED_HOSTS = []  # 域名访问权限


# Application definition
# App 列表
INSTALLED_APPS = [
    'django.contrib.admin',  # 内置后台管理系统
    'django.contrib.auth',  # 内置的用户认证系统
    'django.contrib.contenttypes',  # 记录项目中所有的 model 元数据（Django的ORM框架）
    'django.contrib.sessions',  # session 会话功能
    'django.contrib.messages',  # 消息提示功能
    'django.contrib.staticfiles',  #查找静态资源路径
    'index',  # app
    'user',
]
# 中间件，属性固定，随意变更很容易导致程序异常
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # 内置安全机制，保护用户与网站的通信安全
    'django.contrib.sessions.middleware.SessionMiddleware',  # 会话 Session 功能
    'django.middleware.locale.LocaleMiddleware',  # 使用中文
    'django.middleware.common.CommonMiddleware',  # 处理请求信息，规范化请求内容
    'django.middleware.csrf.CsrfViewMiddleware',  # 开启 CSRF 防护功能
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # 开启内置的用户认证系统
    'django.contrib.messages.middleware.MessageMiddleware',  # 开启内置的信息提示功能
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # 防止恶意程序点击挟持
]

ROOT_URLCONF = 'MyDjango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # 模板引擎
        'DIRS': [
            BASE_DIR / 'templates',  # 根目录，用于存放各 app 共用的模板文件
            BASE_DIR / 'index/templates',  # app 模板目录，存放app需要使用的模板文件
            ],  # 设置模板所在路径

        'APP_DIRS': True,  # 是否在app中查找模板文件
        # 用于填充在 RequestContext 中上下文的调用函数，一般情况下不做任何修改
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MyDjango.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
# 数据库配置
DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',  # Django 提供4种数据库引擎
    #     # 'ENGINE': 'django.db.backends.mysql',
    #     # 'ENGINE': 'django.db.backends.postgresql',
    #     # 'ENGINE': 'django.db.backends.oracle',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # },
    # 设置多个数据库，添加多个字典键值对
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # 数据库引擎
        'NAME': 'django_db',  # 数据库名
        'USER': 'root',  # 用户
        'PASSWORD': 'dbsours',  # 密码
        'HOST': '127.0.0.1',  # 数据库地址
        'PORT': '3306',  # 数据库端口
    },


}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'  # 静态资源访问路由

# 静态文件目录
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'root_static'),  # 根目录下的静态文件目录
#     os.path.join(BASE_DIR, 'index/index_static'),  # app 下的静态文件目录
#     os.path.join(BASE_DIR, 'user/user_static'),  # app 下的静态文件目录
# ]

# 静态资源根目录，部署时收集整个项目的静态资源，构建静态资源与服务器的映射
# STATIC_ROOT = os.path.join(BASE_DIR, 'all_static')